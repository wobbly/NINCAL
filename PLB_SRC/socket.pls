.
. SOCKET ROUTIENS
.
. A SET OF LOADMODS THAT WILL PROVIDE A COMPLEATE SOCKET INTERFACE TO PLB
.       
. 12/15/00 MATTHEW LAKE (SUNBELT COMPUTER SYSTEM)
.        LICENSE: GNU - FEEL FREE TO USE A MODIFY AS LONG AS WE GET RECOGNITION 
.                 FOR ORIGINAL DEVELOPMENT
. 12/20/00 MATTHEW LAKE (SUNBELT COMPUTER SYSTEM)
.        REVISED COMMENTS TO BE BETTER DOCUMENTATION
.        FIXED A BUG IN SEND THAT CAUSED SENDING OF EXTRA DATA. (ADDED *LL)
. 01/03/01 MATTHEW LAKE (SUNBELT COMPUTER SYSTEMS)
.        REVISED ACCEPT TO USE THE NEW 8.5 FEATURES
.
. Aug 2004 Steve + Matthew 
.         optimized code using COMCHECK AND FLAGREST
.
. THE FOLLOWING ROUTINES CAN BE FOUND IN THIS FILE
.
.CONNECT ROUTINE  #SOCKET,#HOST,#PORT,#MODE
.CREATE  ROUTINE  #SOCKET,#HOST,#PORT,#MODE
.ACCEPT  ROUTINE  #SOCKET,#TIMEOUT
.SEND    ROUTINE  #SOCKET,#MSG,#TIMEOUT
.RECV    ROUTINE  #SOCKET,#MSG,#TIMEOUT
.
. FOR EACH FUNCTION:
. #SOCKET   COMFILE ^  IS A COMFILE OPEN USING THE SOCKETS PROTOCALL
. #HOST     DIM     ^  IS A HOSTNAME OR IP ADDRESS
. #PORT     DIM     ^  IS A PORT NUMBER
. #MODE     DIM     1  IS THE SOCKET MODE WHICH IS "R"AW OR "C"OOKED
. #MSG      DIM     ^  IS THE BUFFER THAT DATA IS SENT FROM OR RECVED INTO
. #TIMEOUT  FORM    ^  IS A TIMOUT COUNTER TO INDICATE THE NUMBER OF SECONDS
.                      YOU WANT TO WAIT FOR SOMETHING TO HAPPEN
.
. NOTE:
.  1. GENERALLY IF THERE WAS A PROBLEM, OVER AND ZERO ARE SET.
.  
.  2. IF AN ERROR OCCURED DURING SEND/RECV, ALL FLAGS ARE SET
.
.  3. ON SUCESS, ALL FLAGS ARE CLEARED ( ALL FUNCTIONS )
.
.  4. ALTHOUGH #MSG IS A DIM POINTER, IT SHOULD GENERALLY BE A DIM SIZE
.     OF 1024 WHITCH IS THE DEFAULT SEND AND RECV BUFFER BUILT INTO TO RUNTIME
.
.
         STOP    ;AS ALWAYS, MY LOADMODS ARE NOT DIRECTLY EXECUTABLE
.
.PARAMETERS:        
#SOCKET  COMFILE   ^
#TIMEOUT FORM      ^
#MSG     DIM       ^
#HOST    DIM       ^
#PORT    DIM       ^
#MODE    DIM       1       ;"C"OOKED OR "R"AW MODE

.INTERNAL WORK VARS
#MISC    DIM       200
STAT     DIM       21
TMOUT    FORM      2

.SNDLOG   FILE
.SEQ      FORM      "-1"

.COMSTAT INFORMATION
MSGSTAT  RECORD
CONNECTF FORM      1
SENDF    FORM      1
RECVF    FORM      1
ERRORF   FORM      1
ERRORC   FORM      8
ERRORN   FORM      8
PENDING  FORM      1         ;NEW FOR 8.5A
         RECORDEND
.
.SEND/RECV IS CALLED WITH A COMFILE, A MSG BUFFER AND A TIMEOUT SETTING
.  IF THE COMFILE(SOCKET) IS NOT CONNECTED, RETURN WITH OVER
.  IF TIMEOUT HAS ELLAPS, SET ZERO AND CLEAR OVER
.  IF AN ERROR OCCURES, ALL FLAGS ARE SET
.  IF TIMEOUT IS ZERO, WE BLOCK UNTIL SOMETHING HAPPENS
.  ON SUCCESS, ALL FLAGS ARE CLEARED
#WAITREAD INIT      "001100000000000000000"
RECV     ROUTINE #SOCKET,#MSG,#TIMEOUT
         LOOP
             COMCHECK         #SOCKET,#WAITREAD,#TIMEOUT,STAT
            IF OVER ;TIMEOUT EXPIRED
             UNPACK    STAT,MSGSTAT
             break  if   (MSGSTAT.RECVF = 1 )
             FLAGREST         "0100"
             RETURN
            ENDIF
.
           UNPACK    STAT,MSGSTAT
           UNTIL     (MSGSTAT.RECVF = 1 )
           IF        (MSGSTAT.ERRORF = 1 )
             FLAGREST         "1111"
             RETURN
           ELSE IF   (MSGSTAT.CONNECTF = 0 )
             FLAGREST         "0101"
             RETURN
           ENDIF
         REPEAT
         COMREAD   #SOCKET;#MSG;
         FLAGREST   "0000"
         RETURN
. 
#WAITSEND INIT      "010100000000000000000"
#SENDBUFFER         DIM       ^1000
SEND     ROUTINE   #SOCKET,#MSG,#TIMEOUT
         LOOP
          Remove      #MSG,#SENDBUFFER
          LOOP
            COMCHECK  #SOCKET,#WAITSEND,#TIMEOUT,STAT
            IF OVER ;TIMEOUT EXPIRED
             FLAGREST         "0100"
             RETURN
            ENDIF
.
            UNPACK    STAT,MSGSTAT
            UNTIL     (MSGSTAT.SENDF = 1 )
            IF        (MSGSTAT.ERRORF = 1 )
             FLAGREST         "1111"
             RETURN
            ELSE IF   (MSGSTAT.CONNECTF = 0 )
             FLAGREST         "0101"
             RETURN
            ENDIF
          REPEAT
.
          COMWRITE  #SOCKET;*LL,#SENDBUFFER
          TEST     #MSG
          BREAK IF EOS
         REPEAT
         FLAGREST   "0000"
         RETURN
.
. ACCEPT IS CALLED ONLY WITH A COMFILE THAT HAS BEEN CREATED AND A TIMEOUT
.  IF AN ERROR OCCURES , ALL FLAGS ARE SET
.  IF TIMEOUT OCCURES, OVER IS CLEARD AND ZERO IS SET
.  ON SUCESS ALL FLAGS ARE CLEARD
.
#WAITCONN INIT      "100100000000000000001"
ACCEPT   ROUTINE   #SOCKET,#TIMEOUT
         MOVE      "0",TMOUT
         LOOP
             COMCHECK         #SOCKET,#WAITCONN,#TIMEOUT,STAT
            IF OVER ;TIMEOUT EXPIRED
             FLAGREST         "0100"
             RETURN
            ENDIF
           UNPACK    STAT,MSGSTAT
           BREAK     IF (MSGSTAT.CONNECTF = 1 )
           IF        (MSGSTAT.PENDING = "1")
             COMATTACH  #SOCKET     ;THIS WILL CAUSE AN IO ERROR 
             CONTINUE               ;IF SOCKET WAS NOT CREATED
           ELSE IF   (MSGSTAT.ERRORF = 1 )
             FLAGREST         "1111"
             RETURN
           ENDIF
         REPEAT
         FLAGREST   "0000"
 RETURN
.
. THE FOLLOWING ROUTIENS ARE HERE JUST FOR COMPLEATE IMPLAMENTATION
.  OF PLB SOCKET SUPPORT.  I USUALLY JUST HAVE THESE HARD CODED IN MY PROGRAMS
.
. #HOST IS A DIM VARIBLE CONTAINING THE LOCAL IP ADDRESS
. #PORT IS THE SOCKET WE WILL LISTEN ON
.  ON SUCESS ALL FLAGS ARE CLEARED
.  ON ERROR OVER AND ZERO ARE SET
.
CREATE ROUTINE  #SOCKET,#HOST,#PORT,#MODE
        PACK    #MISC,"S,C,",#HOST,",",#PORT,",",#MODE
        TRAP    OPFAIL IF IO
        COMOPEN #SOCKET,#MISC
        TRAPCLR IO
        FLAGREST    "0000"
 RETURN
 
.#HOST IS A DIM VARIBLE CONTAINT THE HOSTNAME OR IPADDRES OF
.      A REMOTE MACHINE
.#PORT IS THE PORT WE WILL TRY TO OPEN A CONNECTION TO
.  ON SUCESS ALL FLAGS ARE CLEARED
.  ON ERROR OVER AND ZERO ARE SET
.
CONNECT ROUTINE #SOCKET,#HOST,#PORT,#MODE
        PACK    #MISC,"S,O,",#HOST,",",#PORT,",",#MODE
        TRAP    OPFAIL IF IO
        COMOPEN #SOCKET,#MISC
        TRAPCLR IO
        FLAGREST    "0000"
 RETURN

OPFAIL
        NORETURN
        FLAGREST    "0101"
 RETURN
