.
	GOTO		#s
DATE	RECORD		definition
YEAR	DIM		4
MONTH	DIM		2
DAY	DIM		2
HOUR	DIM		2
MINUTE	DIM		2
SECOND	DIM		2
SS	DIM		4
	RECORDEND

CDATE	RECORD		definition	; date record used for calculations
YEAR	FORM		5	; fields are to	large to allow overflow	without
MONTH	FORM		3	; data loss
DAY	FORM		3
HOUR	FORM		3
MINUTE	FORM		3
SECOND	FORM		3
SS	FORM		5
	RECORDEND

#BUFFER	DIM		^30
MONTHDAYS FORM		2(0..13),("0"),("31"),("28"),("31"),("30"),("31"),("30"):
			("31"),("31"),("30"),("31"),("30"),("31"),("0")
.WEEKDAY	DIM	10(0..6),("Sunday"),("Monday"),("Tuesday"),("Wednesday"):
.			("Thursday"),("Friday"),("Saturday")

MONTHNAMES DIM		12(12),("January"),("Feburary"),("March"),("April"):
			("May"),("June"),("July"),("August"):
			("September"),("October"),("November"):
			("December")

WKD1	RECORD		LIKE	DATE
CWKD1	RECORD		LIKE	CDATE

INDATE	DIM		^
DOW	FORM		^
D	FORM		2
C	FORM		2
FM5	FORM		5
ZELLER	ROUTINE		INDATE,DOW
.The following formula - named Zeller's	Rule - allows you to calculate a day 
.of the	week FOR any date:
.F = k + [(13 x	m-1)/5]	+ D + [D/4] + [C/4] - 2	x C
.k is the day of the month. Let's use January 27, 2024 as an example. FOR 
.  this	date, k	= 27.
.m is the month	number.	Months have to be counted specially: March is 1, 
.  April is 2, AND so on to February, which is 12 (this	makes the formula 
.  simpler, because on leap years February 29 is counted as the	last day of 
.  the year). Because of this rule, January AND	February are always counted 
.  as the 11th AND 12th	months of the previous year. In	our example, m = 11.
.D is the last two DIGITS of the year. Because of the month numbering, D = 23 
.  in our example, even	though we are USING a date from	2024.
.C stands FOR century: it's the	first two DIGITS of the	year. 
.  In our CASE,	C = 20.
	UNPACK		INDATE,WKD1
	IMPLODE		#BUFFER,",",WKD1
	EXPLODE		#BUFFER,",",CWKD1
	SUB		"2",CWKD1.MONTH
	IF		(CWKD1.MONTH = "0" OR CWKD1.MONTH < "0")
	 ADD		"12",CWKD1.MONTH
	 SUB		"1",CWKD1.YEAR		; jan/feb are 11/12 of previous	year
	ENDIF		; for our calculation
	MOVE		CWKD1.YEAR,D
	MOVE		(CWKD1.YEAR/100),C
	CALC		FM5=CWKD1.DAY+((("13"*CWKD1.MONTH)-1)/5)+D+(D/4)+(C/4)-(2*C)
	LOOP
	 UNTIL		(FM5>="0")
	 ADD		"7",FM5
	REPEAT
	MOVE		(FM5 - (( FM5/7)*7)),DOW
 RETURN

TWIN	WINDOW		^
MCTRL	PANEL
MCTRLDAYS STATTEXT	(0..6,7)
TITLE	STATTEXT
PMONTH	STATTEXT
NMONTH	STATTEXT
PYEAR	STATTEXT
NYEAR	STATTEXT
CBLUE	COLOR
CRED	COLOR
CBG	COLOR
TOP	FORM		4
BOTTOM	FORM		4
LEFT	FORM		4
RIGHT	FORM		4
H	FORM		4
W	FORM		4
X	FORM		4
Y	FORM		4

WEEKLTR	INIT		"SMTWTFS"
NOW	DIM		20
MNCURSOR DIM		8
DISP	RECORD		LIKE Date
FM2	FORM		2
FM4	FORM		4
DIFF	DIM		20
DOWEEK	FORM		1
MD	FORM		2
WK	FORM		1
MONTHCAL FORM		2(6,7)
D2	DIM		2
D8	DIM		8
OID	FORM		8
CMONTH	DIM		10
CYEAR	DIM		4
CDAY	DIM		2
BTNFACE	FORM		"2147483663"
CREATEMC ROUTINE	TWIN,TOP,BOTTOM,LEFT,RIGHT
	CREATE		CBLUE=196:196:240
	CREATE		CRED=*RED
	CREATE		CBG=*WHITE
	CREATE		TWIN;MCTRL=TOP:BOTTOM:LEFT:RIGHT,BDRSTYLE=3,BGCOLOR=BTNFACE
	CLOCK		TIMESTAMP,NOW

MCSHOWDATE ROUTINE	NOW
	CLEAR		MONTHCAL
	UNPACK		NOW,DISP
. calculate size and positions for header
	MOVE		(BOTTOM-TOP),H
	MOVE		(RIGHT-LEFT),W
	DIV		"8",H
	MOVE		W,OID
	DIV		"7",OID
	MOVE		DISP.MONTH,FM2
	PACK		DIFF,MONTHNAMES(FM2)," ",DISP.YEAR
	CREATE		MCTRL;TITLE=1:H:(2*OID):(W-(2*OID)),DIFF,">Arial":
			ALIGNMENT=1
	ACTIVATE	TITLE
	CREATE		MCTRL;PYEAR=1:H:1:OID,"<<",">Arial",ALIGNMENT=1
	CREATE		MCTRL;PMONTH=1:H:OID:(OID*2),"<",">Arial",ALIGNMENT=1
	CREATE		MCTRL;NMONTH=1:H:(W-(2*OID)):((W-(2*OID))+OID),">",">Arial",ALIGNMENT=1
	CREATE		MCTRL;NYEAR=1:H:((W-(2*OID))+OID):((W-(2*OID))+(OID*2)),">>",">Arial",ALIGNMENT=1
	ACTIVATE	PYEAR,PREYEAR,FM2
	ACTIVATE	PMONTH,PREMONTH,FM2
	ACTIVATE	NMONTH,NXMONTH,FM2
	ACTIVATE	NYEAR,NXYEAR,FM2
	MOVE		OID,W
.
. what day of the week was the first of	the specified month
	MOVE		NOW,DIFF
	RESET		DIFF,6
	APPEND		"01",DIFF
	RESET		DIFF
	CALL		ZELLER USING DIFF,DOWEEK
. populate the calendar
. compensate for leap year
	MOVE		DISP.MONTH,FM2
	MOVE		DISP.YEAR,FM4
 
	IF		(FM2="2")
	 IF		((FM4 -	(( FM4/4)*4)) =	"0")
	  MOVE		"29",MONTHDAYS(FM2)
	 ELSE
	  MOVE		"28",MONTHDAYS(FM2)
	 ENDIF
	ENDIF
. fill in the month grid
	MOVE		"1",WK
	FOR		MD,"1",MONTHDAYS(FM2)
	 INCR		DOWEEK
	 IF		( DOWEEK >"7")
	  SET		DOWEEK
	  INCR		WK
	 ENDIF
	 MOVE		MD,MONTHCAL(WK,DOWEEK)
	REPEAT
. create day items
	CLEAR		X
	MOVE		" ",D2
	RESET		WEEKLTR
	FOR		Y,"1","7"
	 CMOVE		WEEKLTR,D2
	 CREATE		MCTRL;MCTRLDAYS(X,Y)=(((X+1)*H)+1):((((X+1)*H)+H)-1):(((Y*W)-W)+1):((Y*W)),D2:
			">Arial",OBJECTID=OID,BGCOLOR=CBG,ALIGNMENT=1
	 ACTIVATE	MCTRLDAYS(X,Y)
	 BUMP		WEEKLTR
	REPEAT
	MOVE		DISP.DAY,FM2
	FOR		X,"1","6"
	 FOR		Y,"1","7"
	  IF		( MONTHCAL(X,Y)	)
	   MOVE		MONTHCAL(X,Y),D2
	   PACK		D8,X,Y
	   REPLACE	" 0",D8
	   MOVE		D8,OID
	   IF		( MONTHCAL(X,Y)	= FM2 )
	    CREATE	MCTRL;MCTRLDAYS(X,Y)=(((X+1)*H)+1):(((X+1)*H)+H):(((Y*W)-W)+1):(Y*W),D2:
			">Arial",OBJECTID=OID,BGCOLOR=CBLUE,ALIGNMENT=1
	    MOVE	D8,MNCURSOR
	   ELSE
	    CREATE	MCTRL;MCTRLDAYS(X,Y)=(((X+1)*H)+1):(((X+1)*H)+H):(((Y*W)-W)+1):(Y*W),D2:
			">Arial",OBJECTID=OID,BGCOLOR=CBG,ALIGNMENT=1
	   ENDIF
	   IF		(Y="1")
	    SETPROP	MCTRLDAYS(X,Y),FGCOLOR=CRED
	   ENDIF
	   ACTIVATE	MCTRLDAYS(X,Y)
	   EVENTREG	MCTRLDAYS(X,Y),4,DAYCLICK,OBJECTID=OID
	  ELSE
	   DESTROY	MCTRLDAYS(X,Y)
	  ENDIF
	 REPEAT
	REPEAT
	ACTIVATE	MCTRL
 RETURN
DAYCLICK
	UNPACK		MNCURSOR,X,Y
	SETPROP		MCTRLDAYS(X,Y),BGCOLOR=CBG
	MOVE		OID,D8
	UNPACK		D8,X,Y
	SETPROP		MCTRLDAYS(X,Y),BGCOLOR=CBLUE
	MOVE		D8,MNCURSOR
 RETURN
MCGETDATE ROUTINE	INDATE
	GETPROP		TITLE,TEXT=DIFF
	EXPLODE		DIFF," ",CMONTH,CYEAR
	UNPACK		MNCURSOR,X,Y
	GETITEM		MCTRLDAYS(X,Y),0,CDAY
	SEARCH		CMONTH,MONTHNAMES(1),"12",FM2
	PACK		INDATE,CYEAR,FM2,CDAY
	REPLACE		" 0",INDATE
 RETURN
PREYEAR
	CALL		MCGETDATE USING	DIFF
	UNPACK		DIFF,WKD1
	MOVE		WKD1.YEAR,FM4
	DECR		FM4
	MOVE		FM4,WKD1.YEAR
	PACK		DIFF,WKD1
	CALL		MCSHOWDATE USING DIFF
 RETURN
PREMONTH
	CALL		MCGETDATE USING	DIFF
	UNPACK		DIFF,WKD1
	MOVE		WKD1.MONTH,FM2
	DECR		FM2
	IF		ZERO
	 CALL		PREYEAR
	 MOVE		"12",FM2
	 MOVE		FM2,WKD1.MONTH
	ELSE
	 MOVE		FM2,WKD1.MONTH
	ENDIF
	PACK		DIFF,WKD1
	CALL		MCSHOWDATE USING DIFF
 RETURN
NXYEAR
	CALL		MCGETDATE USING	DIFF
	UNPACK		DIFF,WKD1
	MOVE		WKD1.YEAR,FM4
	INCR		FM4
	MOVE		FM4,WKD1.YEAR
	PACK		DIFF,WKD1
	CALL		MCSHOWDATE USING DIFF
 RETURN
NXMONTH
	CALL		MCGETDATE USING	DIFF
	UNPACK		DIFF,WKD1
	MOVE		WKD1.MONTH,FM2
	INCR		FM2
	IF		( FM2>"12")
	 CALL		NXYEAR
	 MOVE		"1",FM2
	 MOVE		FM2,WKD1.MONTH
	ELSE
	 MOVE		FM2,WKD1.MONTH
	ENDIF
	MOVE		FM2,WKD1.MONTH
	PACK		DIFF,WKD1
	CALL		MCSHOWDATE USING DIFF
 RETURN

#S

MYWIN	WINDOW
	WINHIDE
	CLOCK		TIMESTAMP,NOW
	UNPACK		NOW,DISP
	CREATE		MYWIN=1:440:1:640
	CALL		CREATEMC USING MYWIN,"1","440","1","640"

	EVENTREG	MYWIN,5,EXIT
	ACTIVATE	MYWIN
	LOOP
	 WAITEVENT
	REPEAT
EXIT
	SHUTDOWN
