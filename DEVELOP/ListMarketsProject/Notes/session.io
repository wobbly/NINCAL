//////////////////////////////////////////////////////////////////////////////
//
//  PROGRAM:    session.io
//
//   AUTHOR:    Mandie Lyons (mlyons@adjacency.net)
//
//     DATE:    02 NOV 2004
//
//  PURPOSE:    NIN session management file IO routines.  Session management
//              ensures that only authenticated users can access the NIN
//              system.  It also assigns a globally unique ID so that all
//              NIN activity can be audited.
//
// REVISION:    02 NOV 2004     VER01   MLYONS    Created
//
//////////////////////////////////////////////////////////////////////////////
fSession            ifile   fixed=256

sessionKey          dim     36
fSessionIndexCmd    init    "sunidxnt Session,Session,l256;e,n,1-36"

sessionErrorFlag    integer 1

sessionIO           record
id                  dim     36  // 001-036
ipAddress           dim     15  // 037-051
lastActivity        form    14  // 052-065
userID              dim     36  // 066-101
userType            dim     1   // 102-102
userFName           dim     32  // 103-134
userCompany         dim     6   // 135-140
filler              dim     116 // 141-256
                    recordend

#fileManagerSettings    dim     260
///////////////////////////////////////////////////////////////////////////////
    goto #endOfInclude
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
sessionOpen

    getmode *openuseip=#fileManagerSettings
    setmode *openuseip=""
    open fSession,"session"
    setmode *openuseip=#fileManagerSettings

    return
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
sessionClose

    close fSession
    return
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
sessionRead

    read fSession,sessionKey;sessionIO
    return
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
sessionWrite

    clear sessionErrorFlag
    loop
        trap sessionIOerror if IO
            write fSession;sessionIO
        trapclr io
    repeat until (not sessionErrorFlag)

    return
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
sessionUpdate

    loop
        clear sessionErrorFlag
        trap sessionIOerror if IO
            update fSession;sessionIO
        trapclr io
    repeat until (not sessionErrorFlag)

    return
///////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
sessionDelete

    delete fSession,sessionKey
    return
//////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
sessionIOerror

    set sessionErrorFlag
    return
//////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
#endOfInclude
///////////////////////////////////////////////////////////////////////////////
